#version 330 core

layout(location = 0) in vec3 squareVertices; // Sprite base verices
layout(location = 1) in vec4 xyzs; // Position and size of sprite
layout(location = 2) in vec4 color;

out vec4 spriteColor;

// Values that stay constant for the whole mesh.
uniform vec3 CameraRight_worldspace;
uniform vec3 CameraUp_worldspace;
uniform mat4 VP; // Model-View-Projection matrix, but without the Model (the position is in BillboardPos; the orientation depends on the camera)

void main()
{
	float spriteSize = xyzs.w;
	vec3 spriteCenter_worldspace = xyzs.xyz;
	
	vec3 vertexPosition_worldspace = 
		spriteCenter_worldspace
		+ CameraRight_worldspace * squareVertices.x * spriteSize
		+ CameraUp_worldspace * squareVertices.y * spriteSize;

	// Output position of the vertex
	gl_Position = VP * vec4(vertexPosition_worldspace, 1.0f);
	
	spriteColor = color;
}

